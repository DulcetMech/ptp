<?xml version="1.0" encoding="UTF-8"?>
<!-- ******************************************************************************* -->
<!-- * Copyright (c) 2011 IBM All rights reserved. This program -->
<!-- * and the accompanying materials are made available under the terms of the -->
<!-- * Eclipse Public License v1.0 which accompanies this distribution, and is -->
<!-- * available at http://www.eclipse.org/legal/epl-v10.html -->
<!-- * -->
<!-- * Contributors: -->
<!-- * Brian Watt - design and implementation -->
<!-- ****************************************************************************** -->
<resource-manager-builder 
	xmlns="http://eclipse.org/ptp/rm" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://eclipse.org/ptp/rm http://eclipse.org/ptp/schemas/v1.1/rm.xsd" 
	name="edu.utexas.tacc.stampede.slurm.batch">
	<control-data>
		<!-- this is a necessary attribute for the functioning of LML; link it to the batch-specific variable name -->
		<attribute name="control.queue.name" visible="false">
			<link-value-to>partition</link-value-to>
		</attribute>
		<!-- we set this to invisible because the values are not really modifiable -->
		<attribute name="queues" visible="false"/>
		<!-- needed by RM internals for fetch; name is fixed by convention -->
		<attribute name="stdout_remote_path" visible="false">
			<default>${ptp_rm:workdir#value}/slurm-${ptp_rm:@jobId#default}.out</default>
			<link-value-to>output</link-value-to>
		</attribute>
		<!-- needed by RM internals for fetch; name is fixed by convention -->
		<attribute name="stderr_remote_path" visible="false">
			<default>${ptp_rm:workdir#value}/slurm-${ptp_rm:@jobId#default}.out</default>
			<link-value-to>error</link-value-to>
		</attribute>
		<!-- ========================================================================================== -->
		<!-- SBATCH COMMAND ARGUMENTS																	-->
		<!-- ========================================================================================== -->
		<attribute name="account" type="string">
			<description>Charge resources used by this job to specified account. (-A, --account=&lt;account&gt;)</description>
			<tooltip><![CDATA[The account is an arbitrary string. The account name may be changed after
job submission using the scontrol command.]]></tooltip>
		</attribute>
		<attribute name="acctg_freq" type="string">
			<description>Define the job accounting sampling interval. (--acctg-freq=&lt;seconds&gt;)</description>
			<tooltip><![CDATA[This can be used to override the JobAcctGatherFrequency parameter in SLURM's
configuration file, slurm.conf. A value of zero disables the periodic job sampling and provides
accounting information only on job termination (reducing SLURM interference with the job).]]></tooltip>
		</attribute>
		<attribute name="begin" type="string">
			<description>Defer the allocation of the job until the specified time. (--begin&lt;time&gt;)</description>
			<tooltip><![CDATA[Submit the batch script to the SLURM controller immediately, like normal, 
but tell the controller to defer the allocation of the job until the specified time. 
Time may be of the form HH:MM:SS to run a job at a specific time of day 
(seconds are optional). (If that time is already past, the next day is assumed.) 
You may also specify midnight, noon, or teatime (4pm) and you can have a
time-of-day suffixed with AM or PM for running in the morning or the evening.
You can also say what day the job runs by specifying a date of the form 
MMDDYY or MM/DD/YY or YYYY-MM-DD. Combine date and time using the 
following format YYYY-MM-DD[HH:MM[:SS]]. 
You can also give times like "now" + count time-units, where the time-units 
can be seconds (default), minutes, hours, days, or weeks and you can tell 
SLURM to run the job today with the keyword "today" and to run the job 
tomorrow with the keyword "tomorrow". 
The value may be changed after job submission using the scontrol command.]]></tooltip>
		</attribute>
		<attribute name="checkpoint" type="string">
			<description>Specifies the interval between creating checkpoints of the job step. (--checkpoint=&lt;time&gt;)</description>
			<tooltip><![CDATA[By default, the job step has no checkpoints created.
Acceptable time formats include "minutes", "minutes:seconds", "hours:minutes:seconds",
"days-hours", "days-hours:minutes" and "days-hours:minutes:seconds".]]></tooltip>
		</attribute>
		<attribute name="checkpoint_dir" type="string">
			<description>Specifies the directory into which the job or job step's checkpoint should be written. (--checkpint_dir=&lt;directory&gt;)</description>
			<tooltip><![CDATA[The default value is the current working directory. Checkpoint files
of the form "<job_id>.ckpt" for jobs and "<job_id>.<step_id>.ckpt" for job steps.]]></tooltip>
		</attribute>
		<attribute name="comment" type="string">
			<description>An arbitrary comment. (--comment&lt;string&gt;)</description>
			<tooltip><![CDATA[An arbitrary comment enclosed in double quotes if using spaces
or some special characters.]]></tooltip>
		</attribute>
		<attribute name="clusters" type="string">
			<description>Specify the clusters where commands are issued. (--clusters&lt;string&gt;)</description>
			<tooltip><![CDATA[Specify the clusters where command are issued. Multiple cluster names may be
comma separated. The job will be submitted to the one cluster
providing the earliest expected job initiation time. The default
value is the current cluster. A value of 'allâ€™ will query to run
on all clusters. Note the --export option to control environment
variables exported between clusters.]]></tooltip>
		</attribute>
		<attribute name="constraint" type="string">
			<description>Specify which features are required. (--constraint=&lt;list&gt;)</description>
			<tooltip><![CDATA[Nodes can have features assigned to them by the SLURM administrator.
Users can specify which of these features are required
by their job using the constraint option. Only nodes having
features matching the job constraints will be used to satisfy
the request. Multiple constraints may be specified with AND,
OR, exclusive OR, resource counts, etc. ]]></tooltip>
		</attribute>
		<attribute name="contiguous" type="boolean" translateBooleanAs='--contiguous, '>
			<description>Specify run on a contiguous set of nodes. (--contiguous)</description>
			<tooltip><![CDATA[If set, then the allocated nodes must form a contiguous set.
Not honored with the topology/tree or topology//3d_torus plugins,
both of which can modify the node ordering.]]></tooltip>
		</attribute>
		<attribute name="cores_per_socket" type="string">
			<description>Select nodes with at least the specified number of cores per socket. (--cores-per-socket=&lt;cores&gt;)</description>
			<tooltip><![CDATA[Restrict node selection to nodes with at least the specified
number of cores per socket. See additional information under -B
option above when task/affinity plugin is enabled.]]></tooltip>
		</attribute>
		<attribute name="cpu_bind" type="string">
			<description>Bind tasks to CPUs. (--cpu_bind=[{quiet,verbose},]type)</description>
			<tooltip><![CDATA[Bind tasks to CPUs. Used only when the task/affinity plugin is
enabled. The configuration parameter TaskPluginParam may override
these options. For example, if TaskPluginParam is configured
to bind to cores, your job will not be able to bind tasks
to sockets. NOTE: To have SLURM always report on the selected
CPU binding for all commands executed in a shell, you can enable
verbose mode by setting the SLURM_CPU_BIND environment variable
value to "verbose".]]></tooltip>
		</attribute>
		<attribute name="cpus_per_task" type="string">
			<description>Bind tasks to CPUs. (--cpus-per-task=&lt;ncpus&gt;)</description>
			<tooltip><![CDATA[Advise the SLURM controller that ensuing job steps will require
ncpus number of processors per task. Without this option, the
controller will just try to allocate one processor per task.]]></tooltip>
		</attribute>
		<attribute name="dependency" type="string">
			<description>Defer the start of this job until the specified dependencies have been satisfied completed. (--dependency=&lt;dependency_list&gt;)</description>
			<tooltip><![CDATA[Format is of the form "type:job_id[:job_id][,type:job_id[:job_id]].
Many jobs can share the same dependency and these jobs may even belong to different
users. The value may be changed after job submission using the scontrol command.]]></tooltip>
		</attribute>
		<attribute name="distribution" type="string">
			<description>Specify alternate distribution methods for remote processes. (--distribution=&lt;block|cyclic|arbitrary|plane=&lt;options&gt;[:block|cyclic]&gt;)</description>
			<tooltip><![CDATA[Specify alternate distribution methods for remote processes. In
sbatch, this only sets environment variables that will be used
by subsequent srun requests. This option controls the assign-
ment of tasks to the nodes on which resources have been allo-
cated, and the distribution of those resources to tasks for
binding (task affinity). The first distribution method (before
the ":") controls the distribution of resources across nodes.
The optional second distribution method (after the ":") controls
the distribution of resources across sockets within a node.
Note that with select/cons_res, the number of cpus allocated on
each socket and node may be different. Refer to
http://www.schedmd.com/slurmdocs/mc_support.html for more infor-
mation on resource allocation, assignment of tasks to nodes, and
binding of tasks to CPUs.]]></tooltip>
		</attribute>
		<attribute name="error" type="string">
			<description>Instruct SLURM to connect the batch script's standard error directly to the file name specified in the "filename pattern". (--error=&lt;filename_pattern&gt;)</description>
			<tooltip><![CDATA[By default both standard output and standard error are directed to a file
of the name "slurm-%j.out", where the "%j" is replaced with the job allocation number.
See the "--input" option for filename specification options.
Use absolute path or "${ptp_rm:workdir#value}" prefix to be relative to working directory.]]></tooltip>
			<validator>
				<regex expression="/.+|\$\{ptp_rm\:workdir\#value\}/.+"></regex>
				<error-message>"error" field: Use absolute path or "${ptp_rm:workdir#value}" prefix to be relative to working directory.</error-message>
			</validator>
		</attribute>
		<attribute name="exclude" type="string">
			<description>Specify what nodes to exclude. (--exclude=&lt;node name list&gt;)</description>
			<tooltip><![CDATA[Explicitly exclude certain nodes from the resources granted to the job.]]></tooltip>
		</attribute>
		<attribute name="exclusive" type="boolean" translateBooleanAs='--exclusive, '>
			<description>Do not share nodes with other running jobs. (--exclusive)</description>
			<tooltip><![CDATA[The job allocation can not share nodes with other running jobs.
This is the opposite of --share, whichever option is seen last
on the command line will be used. The default shared/exclusive
behavior depends on system configuration and the partition's
Shared option takes precedence over the job's option.]]></tooltip>
		</attribute>
		<attribute name="export" type="string">
			<description>Identify which environment variables are propagated to the batch job. (--export=&lt;environment variables|ALL|NONE&gt;)</description>
			<tooltip><![CDATA[Format: <environment variables | ALL | NONE >.
Multiple environment variable names should be comma separated.
Environment variable names may be specified to propagate the current 
value of those variables (e.g. "--export=EDITOR") or specific values
for the variables may be exported (e.g.. "--export=EDITOR=/bin/vi").
This option particularly important for jobs that are submitted on one cluster
and execute on a different cluster (e.g. with different paths). By default all
environment variables are propagaged. If the argument is NONE or
specific environment variable names, then the --get-user-env
option is implicitly set to load other environment variables based upon
the user's configuration on the cluster which executes the job.]]></tooltip>
		</attribute>
		<attribute name="export_file" type="string">
			<description>Specify environment variables defined in &lt;filename&gt; or read from &lt;fd&gt;. (--export-file=&lt;filename|fd&gt;)</description>
			<tooltip><![CDATA[If a number between 3 and OPEN_MAX is specified as the argument
to this option, a readable file descriptor will be assumed
(STDIN and STDOUT are not supported as valid arguments). Otherwise
a filename is assumed. Export environment variables
defined in <filename> or read from <fd> to the job's execution
environment. The content is one or more environment variable
definitions of the form NAME=value, each separated by a null
character. This allows the use of special characters in environment
definitions.]]></tooltip>
		</attribute>
		<attribute name="extra_node_info" type="string">
			<description>Request specific allocation of resources. (--extra-node-info=&lt;socket[:cores[:threads]]&gt;).</description>
			<tooltip><![CDATA[Request a specific allocation of resources with details as to
the number and type of computational resources within a cluster:
number of sockets (or physical processors) per node, cores per
socket, and threads per core. The total amount of resources
being requested is the product of all of the terms. Each value
specified is considered a minimum. An asterisk (*) can be used
as a placeholder indicating that all available resources of that
type are to be utilized. As with nodes, the individual levels
can also be specified in separate options if desired:
--sockets-per-node=<sockets>
--cores-per-socket=<cores>
--threads-per-core=<threads>
If task/affinity plugin is enabled, then specifying an allocation
in this manner also sets a default --cpu_bind option of
threads if the -B option specifies a thread count, otherwise an
option of cores if a core count is specified, otherwise an
option of sockets. If SelectType is configured to
select/cons_res, it must have a parameter of CR_Core,
CR_Core_Memory, CR_Socket, or CR_Socket_Memory for this option
to be honored. This option is not supported on BlueGene systems
(select/bluegene plugin is configured). If not specified, the
scontrol show job will display 'ReqS:C:T=*:*:*'.]]></tooltip>
		</attribute>
		<attribute name="get_user_env" type="string">
			<description>Tell sbatch to retrieve the login environment variables for the user. (--get_user_env[=timeout][mode])</description>
			<tooltip><![CDATA[This option tells sbatch to retrieve the
login environment variables for the user specified in the --uid option.
The environment variables are retrieved by running something of this sort
"su - <username> -c /usr/bin/env" and parsing the output.
Be aware that any environment variables already set in sbatch's environment
take precedence over any environment variables in the user's
login environment. Clear any environment variables before calling sbatch
that you do not want propagated to the spawned program.
The optional "timeout" value is in seconds. Default value is 8 seconds.
The optional "mode" value control the "su" options.
With a "mode" value of "S", "su" is executed without the "-" option.
With a "mode" value of "L", "su" is executed with the "-" option,
replicating the login environment.
If "mode" not specified, the mode established at SLURM build time
is used.
Example of use include "--get-user-env", "--get-user-env=10"
"--get-user-env=10L", and "--get-user-env=S".
This option was originally created for use by Moab.]]></tooltip>
		</attribute>
		<attribute name="gres" type="string">
			<description>Specifies a comma delimited list of generic consumable resources. (--gres=&lt;list&gt;)</description>
			<tooltip><![CDATA[Specifies a comma delimited list of generic consumable
resources. The format of each entry on the list is
"name[:count[*cpu]]". The name is that of the consumable
resource. The count is the number of those resources with a
default value of 1. The specified resources will be allocated
to the job on each node allocated unless "*cpu" is appended, in
which case the resources will be allocated on a per cpu basis.
The available generic consumable resources is configurable by
the system administrator. A list of available generic consumable
resources will be printed and the command will exit if the
option argument is "help". Examples of use include
"--gres=gpus:2*cpu,disk=40G" and "--gres=help".]]></tooltip>
		</attribute>
		<attribute name="hint" type="choice">
			<description>Bind tasks according to application hints. (--hint=&lt;type&gt;)</description>
			<tooltip><![CDATA[Bind tasks according to application hints:
(1) compute_bound - Select settings for compute bound applications: use all
cores in each socket, one thread per core;
(2) memory_bound - Select settings for memory bound applications: use only
one core in each socket, one thread per core; and
(3) [no]multithread - [don't] use extra threads with in-core multi-threading
which can benefit communication intensive applications.]]></tooltip>
			<choice>,compute_bound,memory_bound,multithread,nomultithread</choice>
			<default></default>
		</attribute>
		<attribute name="hold" type="boolean" translateBooleanAs='--hold, '>
			<description>Specify the job is to be submitted in a held state (priority of zero). (--hold)</description>
			<tooltip><![CDATA[A held job can now be released using scontrol to reset its priority
(e.g. "scontrol update jobid=<id> priority=1").]]></tooltip>
		</attribute>
		<attribute name="immediate" type="boolean" translateBooleanAs="--immediate, ">
			<description>The batch script is only submitted to the controller if the resources
necessary to grant its job allocation are immediately available. (--immediate)</description>
			<tooltip><![CDATA[If the job allocation has to wait in a queue of pending jobs,
the batch script is not submitted.]]></tooltip>
		</attribute>
		<attribute name="input" type="string">
			<description>Specify filename pattern of batch script's standard input. (--input=&lt;filename_pattern&gt;)</description>
			<tooltip><![CDATA[Instruct SLURM to connect the batch script's standard input
directly to the file name specified in the "filename pattern".
By default, "/dev/null" is open on the batch script's standard
input and both standard output and standard error are directed
to a file of the name "slurm-%j.out", where the "%j" is replaced
with the job allocation number, as described below.
The filename pattern may contain one or more replacement symbols,
which are a percent sign "%" followed by a letter (e.g.
%j). Supported replacement symbols are:
(1) %j - Job allocation number.
(2) %N - Node name. Only one file is created, so %N will be
replaced by the name of the first node in the job, which
is the one that runs the script.]]></tooltip>
		</attribute>
		<attribute name="job_name" type="string">
			<description>Specify a name for the job allocation. (--job-name=&lt;jobname&gt;)</description>
			<tooltip><![CDATA[The specified name appears along with
the job id number when querying running jobs on the system. The default
is the name of the batch script, or just "sbatch" if the script is
read on sbatch's standard input.]]></tooltip>
			<default>ptp_sbatch</default>
			<validator>
				<regex expression="[a-zA-Z_][0-9a-zA-Z_]*"/>
				<error-message>"job_name" field: Must be at least one alphanumeric character</error-message>
			</validator>
		</attribute>
		<attribute name="licenses" type="string">
			<description>Specify a comma delimited list of license names (--licenses=&lt;license&gt;)</description>
			<tooltip><![CDATA[Specification of licenses (or other resources available on all
nodes of the cluster) which must be allocated to this job.
License names can be followed by an asterisk and count (the
default count is one). Multiple license names should be comma
separated (e.g. "--licenses=foo*4,bar").]]></tooltip>
		</attribute>
		<attribute name="mail_type" type="choice">
			<description>Notify user by email when certain event types occur. (--mail-type=&lt;type&gt;)</description>
			<tooltip><![CDATA[Valid type values are BEGIN, END, FAIL, REQUEUE, and ALL (any state
change). The user to be notified is indicated with --mail-user.]]></tooltip>
			<choice>BEGIN,END,FAIL,REQUEUE,ALL</choice>
		</attribute>
		<attribute name="mail_user" type="string">
			<description>User to receive email notification of state changes. (--mail_user=&lt;user&gt;)</description>
			<tooltip><![CDATA[As defined by --mail-type.
The default value is the submitting user.]]></tooltip>
		</attribute>
		<attribute name="mem" type="string">
			<description>Specify the real memory required per node in MegaBytes. (--mem=&lt;MB&gt;)</description>
			<tooltip><![CDATA[Specify the real memory required per node in MegaBytes. Default
value is DefMemPerNode and the maximum value is MaxMemPerNode.
If configured, both of parameters can be seen using the scontrol
show config command. This parameter would generally be used if
whole nodes are allocated to jobs (SelectType=select/linear).
Also see --mem-per-cpu. --mem and --mem-per-cpu are mutually
exclusive. NOTE: Enforcement of memory limits currently
requires enabling of accounting, which samples memory use on a
periodic basis (data need not be stored, just collected). A task
may exceed the memory limit until the next periodic accounting
sample.]]></tooltip>
		</attribute>
		<attribute name="mem_per_cpu" type="string">
			<description>Mimimum memory required per allocated CPU in MegaBytes. (--mem-per-cpu=&lt;MB&gt;)</description>
			<tooltip><![CDATA[Mimimum memory required per allocated CPU in MegaBytes. Default
value is DefMemPerCPU and the maximum value is MaxMemPerCPU (see
exception below). If configured, both of parameters can be seen
using the scontrol show config command. Note that if the job's --mem-per-cpu
value exceeds the configured MaxMemPerCPU, then the user's limit
will be treated as a memory limit per task; --mem-per-cpu will be
reduced to a value no larger than MaxMemPerCPU; --cpus-per-task
will be set and value of --cpus-per-task multiplied by the new --mem-per-cpu
value will equal the original --mem-per-cpu value specified by the user.
This parameter would generally be used if individual processors are
allocated to jobs (SelectType=select/cons_res). Also see --mem.
--mem and --mem-per-cpu are mutually exclusive.]]></tooltip>
		</attribute>
		<attribute name="mem_bind" type="string">
			<description>Bind tasks to memory. (--mem_bind=[{quite,verbose},]type)</description>
			<tooltip><![CDATA[Bind tasks to memory. Used only when the task/affinity plugin 
is enabled and the NUMA memory functions are available. Note that
the resolution of CPU and memory binding may differ on some
architectures. For example, CPU binding may be performed at the
level of the cores within a processor while memory binding will
be performed at the level of nodes, where the definition of
"nodes" may differ from system to system. The use of any type other
than "none" or "local" is not recommended. If you want greater
control, try running a simple test code with the options
"--cpu_bind=verbose,none --mem_bind=verbose,none" to determine
the specific configuration.]]></tooltip>
		</attribute>
		<attribute name="mincpus" type="string">
			<description>Specify a minimum number of logical cpus/processors per node. (--mincpus=&lt;n&gt;)</description>
			<tooltip><![CDATA[Specify a minimum number of logical cpus/processors per node.]]></tooltip>
		</attribute>
		<attribute name="network" type="string">
			<description>Specify the communication protocol to be used. (--network=&lt;type&gt;)</description>
			<tooltip><![CDATA[Specify the communication protocol to be used. The interpretation
of type is system dependent. This option is current supported on
systems with IBM's Parallel Environment (PE). See IBM's LoadLeveler
job command keyword documentation about the keyword "network" for
more information. Multiple values may be specified in a comma
separated list. All options are case in-sensitive. ]]></tooltip>
		</attribute>
		<attribute name="nice" type="string">
			<description>Run the job with an adjusted scheduling priority within SLURM. (--nice[=adjustment])</description>
			<tooltip><![CDATA[With no adjustment value the scheduling priority is decreased
by 100. The adjustment range is from -10000 (highest priority)
to 10000 (lowest priority). Only privileged users can specify
a negative adjustment. NOTE: This option is presently
ignored if SchedulerType=sched/wiki or
SchedulerType=sched/wiki2.]]></tooltip>
		</attribute>
		<attribute name="nodefile" type="string">
			<description>Specify filename containing nodes. (--nodefile=&lt;node file&gt;)</description>
			<tooltip><![CDATA[Much like --nodelist, but the list is contained in a file of
name node file. The node names of the list may also span multiple
lines in the file. Duplicate node names in the file will
be ignored. The order of the node names in the list is not
important; the node names will be sorted by SLURM.]]></tooltip>
		</attribute>
		<attribute name="nodelist" type="string">
			<description>Request a specific list of node names. (--nodelist=&lt;node name list&gt;)</description>
			<tooltip><![CDATA[Request a specific list of node names. The list may be specified
as a comma-separated list of node names, or a range of node
names (e.g. mynode[1-5,7,...]). Duplicate node names in the list
will be ignored. The order of the node names in the list is not
important; the node names will be sorted by SLURM.]]></tooltip>
		</attribute>
		<attribute name="nodes" type="string">
			<description>Request that a minimum of "minnodes" nodes be allocated to this job. (--nodes=&lt;minnodes[-maxnodes]&gt;)</description>
			<tooltip><![CDATA[The scheduler may decide to launch the job on more than "minnodes" nodes.
A limit on the maximum node count may be specified with "maxnodes"
(e.g. "--nodes=2-4"). The minimum and maximum node count may be the
same to specify a specific number of nodes (e.g. "--nodes=2-2" asks
for two and ONLY two nodes).
The partition's node limits supersede those of the job.
If a job's node limits are outside of the range permitted for its
associated partition, the job is left in a PENDING state.
This permits possible execution at a later time, when the partition
limit is changed.
If a job node limit exceeds the number of nodes configured in the
partition, the job is rejected.
Note that the environment variable SLURM_NNODES are set to the
count of nodes actually allocated to the job. See the ENVIRONMENT VARIABLES
section for more information. If "-N" is not specified, the default
behavior is to allocate enough nodes to satisfy the requirements of
the "-n" and "-c" options.
The job is allocated as many nodes as possible within the range specified
and without delaying the initiation of the job.]]></tooltip>
		</attribute>
		<attribute name="no_kill" type="boolean" translateBooleanAs='--no-kill, '>
			<description>Do not automatically terminate job if one of the nodes fails allocation. (--no-kill)</description>
			<tooltip><![CDATA[Do not automatically terminate a job if one of the nodes
fails allocation. The user will assume the responsibilities
for fault-tolerance should a node fail. When there is a node
failure, any active job steps (usually MPI jobs) on that node
will almost certainly suffer a fatal error, but with --no-kill,
the job allocation will not be revoked so the user may launch
new job steps on the remaining nodes in their allocation.
By default SLURM terminates the entire job allocation if any
node fails in its range of allocated nodes.]]></tooltip>
		</attribute>
		<attribute name="no_requeue" type="boolean" translateBooleanAs='--no-requeue, '>
			<description>Specifies that the batch job should not be requeued after node failure. (--no-requeue)</description>
			<tooltip><![CDATA[Specifies that the batch job should not be requeued after
node failure. Setting this option will prevent system administrators
from being able to restart the job (for example, after a scheduled
downtime). When a job is requeued, the batch script is initiated
from its beginning. Also see the --requeue option. The JobRequeue
configuration parameter controls the default behavior on the cluster.]]></tooltip>
		</attribute>
		<attribute name="ntasks" type="integer" min="1">
			<description>Specify the number of tasks to run. (--ntasks=&lt;number&gt;)</description>
			<tooltip><![CDATA[Allocate resources for ntasks tasks. The default
is one task per node, but note that the --ntasks-per-node option changes this default.]]></tooltip>
			<default>1</default>
		</attribute>
		<attribute name="ntasks_per_core" type="choice">
			<description>Request the maximum ntasks be invoked on each core. (--ntasks-per-core=&lt;ntasks&gt;)</description>
			<tooltip><![CDATA[Request the maximum ntasks be invoked on each core.
Meant to be used with the --ntasks option. Related to --ntasks-per-node
except at the core level instead of the node level. Masks will automatically
be generated to bind the tasks to specific core unless --cpu_bind=none is
specified. NOTE: This option is not supported unless SelectTypeParameters=CR_Core
or SelectTypeParameters=CR_Core_Memory is configured.]]></tooltip>
			<choice>1,2,4,8,16,32,64</choice>
			<default>1</default>
		</attribute>
		<attribute name="ntasks_per_node" type="choice">
			<description>Request the maximum ntasks be invoked on each node. (--ntasks-per-node=&lt;ntasks&gt;)</description>
			<tooltip><![CDATA[Meant to be used with the --nodes option. This is related to
--cpus-per-task=ncpus, but does not require knowledge of the actual number of
cpus on each node. In some cases, it is more convenient to be able to request that no 
more than a specific number of tasks be invoked on each node. Examples of this
include submitting a hybrid MPI/OpenMP app where only one MPI "task/rank" should
be assigned to each node while allowing the OpenMP portion to utilize all of the
parallelism present in the node, or submitting a single setup/cleanup/monitoring
job to each node of a pre-existing allocation as one step in a larger job script.]]></tooltip>
			<choice>1,2,4,8,16,32,64</choice>
			<default>1</default>
		</attribute>
		<attribute name="ntasks_per_socket" type="choice">
			<description>Request the maximum ntasks be invoked on each socket. (--ntasks-per-socket=&lt;ntasks&gt;)</description>
			<tooltip><![CDATA[Request the maximum ntasks be invoked on each socket.
Meant to be used with the --ntasks option. Related to --ntasks-per-node
except at the socket level instead of the node level. Masks will automatically
be generated to bind the tasks to specific sockets unless --cpu_bind=none is
specified. NOTE: This option is not supported unless SelectTypeParameters=CR_Socket
or SelectTypeParameters=CR_Socket_Memory is configured.]]></tooltip>
			<choice>1,2,4,8,16,32,64</choice>
			<default>1</default>
		</attribute>
		<attribute name="open_mode" type="choice">
			<description>Open the output and error files using append or truncate mode as specified. (--open_mode=append|truncate)</description>
			<tooltip><![CDATA[The default value is specified by the system configuration parameter JobFileAppend.]]></tooltip>
			<choice>append,truncate</choice>
		</attribute>
		<attribute name="output" type="string">
			<description>Instruct SLURM to connect the batch script's standard output directly to the file name specified in the "filename pattern". (--output=&lt;filename_pattern&gt;)</description>
			<tooltip><![CDATA[By default both standard output and standard error are directed to a file of
the name "slurm-%j.out", where the "%j" is replaced with the job allocation number.
See the --input option for filename specification options.
Use absolute path or "${ptp_rm:workdir#value}" prefix to be relative to working directory.]]></tooltip>
			<validator>
				<regex expression="/.+|\$\{ptp_rm\:workdir\#value\}/.+"></regex>
				<error-message>"output" field: Use absolute path or "${ptp_rm:workdir#value}" prefix to be relative to working directory.</error-message>
			</validator>
		</attribute>
		<attribute name="overcommit" type="boolean" translateBooleanAs='--overcommit, '>
			<description>Overcommit resources. (--overcommit)</description>
			<tooltip><![CDATA[Overcommit resources. Normally, sbatch will
allocate one task per processor. By specifying --overcommit you are
explicitly allowing more than one task per processor. However no
more than MAX_TASKS_PER_NODE tasks are permitted to execute per node.]]></tooltip>
		</attribute>
		<attribute name="partition" type="string">
			<description>Request a specific partition for the resource allocation. (--partition=&lt;partition_names&gt;)</description>
			<tooltip><![CDATA[If not specified, the default behaviour is to allow the slurm controller to select the default
partition as designated by the system administrator. If the job can use more
than one partition, specify their names in a comma separate list and the one
offering earliest initiation is used.]]></tooltip>
		</attribute>
		<attribute name="propagate" type="string">
			<description>Specify which resource limits to propogate. (--propagate=&lt;rlimitfR&gt;)</description>
			<tooltip><![CDATA[Allows users to specify which of the modifiable (soft)
resource limits to propagate to the compute nodes and apply to their jobs.
If rlimits is not specified, then all resource limits will be propagated.]]></tooltip>
		</attribute>
		<attribute name="qos" type="string">
			<description>Request a quality of service for the job. (--qos=&lt;qos&gt;)</description>
			<tooltip><![CDATA[Request a quality of service for the job.
QOS values can be defined for each user/cluster/account association in
the SLURM database. Users will be limited to their association's defined
set of qos's when the SLURM configuration parameter, AccountingStorageEnforce,
includes "qos" in it's definition.]]></tooltip>
		</attribute>
		<attribute name="quiet" type="boolean" translateBooleanAs="--quiet, ">
			<description>Suppress informational messages from sbatch. (--quiet)</description>
			<tooltip>Errors are still displayed.</tooltip>
		</attribute>
		<attribute name="requeue" type="boolean" translateBooleanAs='--requeue, '>
			<description>Specifies that the batch job should be requeued after node failure. (--requeue)</description>
			<tooltip><![CDATA[Specifies that the batch job should be requeued after node failure.
When a job is requeued, the batch script is initiated from its
beginning. Also see the --no-requeue option. The JobRequeue configuration
parameter controls the default behavior on the cluster.]]></tooltip>
		</attribute>
		<attribute name="reservation" type="string">
			<description>Allocate resources for the job from the named reservation. (--reservation=&lt;name&gt;)</description>
		</attribute>
		<attribute name="signal" type="string">
			<description>When a job is within "sig_time" seconds of its end time,
send it the signal "sig_num". (--signal=&lt;sig_num&gt;[@&lt;sig_time&gt;])</description>
			<tooltip><![CDATA[Format: <sig_num>[@<sig_time>].
Due to the resolution of event handling by SLURM, the signal may
be sent up to 60 seconds earlier than specified.
"sig_num" may either be a signal number or name (e.g. "10" or "USR1").
"sig_time" must have integer value between zero and 65535.
By default, no signal is sent before the job's end time.
If a "sig_num" is specified without any sig_time,
the default time is 60 seconds.]]></tooltip>
		</attribute>
		<attribute name="share" type="boolean" translateBooleanAs='--share, '>
			<description>Specify if the job can shared nodes with other running jobs. (--share)</description>
			<tooltip><![CDATA[The job allocation can share nodes with other running jobs.
This is the opposite of --exclusive, whichever option is seen last
on the command line will be used. The default shared/exclusive
behavior depends on system configuration and the partition's Shared
option takes precedence over the job's option. This option may result
the allocation being granted sooner than if the --share option was not
set and allow higher system utilization, but application performance
will likely suffer due to competition for resources within a node.]]></tooltip>
		</attribute>
		<attribute name="sockets_per_node" type="string">
			<description>Specify nodes with at least the specified number of sockets. (--sockets-per-node=&lt;sockets&gt;)</description>
			<tooltip><![CDATA[Restrict node selection to nodes with at least the specified
number of sockets. See additional information under -B option
above when task/affinity plugin is enabled.]]></tooltip>
		</attribute>
		<attribute name="switches" type="string">
			<description>Specify the maximum count of switches desired and the maximum time to wait for them. (--switches=&lt;count&gt;[@&lt;max-time&gt;])</description>
			<tooltip><![CDATA[When a tree topology is used, this defines the maximum count
of switches desired for the job allocation and optionally the
maximum time to wait for that number of switches. If SLURM finds
an allocation containing more switches than the count specified,
the job remains pending until it either finds an allocation with
desired switch count or the time limit expires. It there is no switch
count limit, there is no delay in starting the job. Acceptable
time formats include "minutes", "minutes:seconds", "hours:minutes:seconds",
"days-hours", "days-hours:minutes" and "days-hours:minutes:seconds".
The job's maximum time delay may be limited by the system administrator
using the SchedulerParameters configuration parameter with the max_switch_wait
parameter option. The default max-time is the max_switch_wait
SchedulerParameter.]]></tooltip>
		</attribute>
		<attribute name="threads_per_core" type="string">
			<description>Specify at least the number of threads per core. (--threads-per-core=&lt;threads&gt;)</description>
			<tooltip><![CDATA[Restrict node selection to nodes with at least the specified
number of threads per core. NOTE: "Threads" refers to the number of
processing units on each core rather than the number of application
tasks to be launched per core. See additional information under -B
option above when task/affinity plugin is enabled.]]></tooltip>
		</attribute>
		<attribute name="time" type="string">
			<description>Set a limit on the total run time of the job allocation. (--time=&lt;time&gt;)</description>
			<tooltip><![CDATA[If the requested time limit exceeds the partition's time limit, the job is
left in a PENDING state (possibly indefinitely). The default time
limit is the partition's time limit. When the time limit is reached,
each task in each job step is sent SIGTERM followed by SIGKILL. The
interval between signals is specified by the SLURM configuration
parameter "KillWait". A time limit of zero requests that no time
limit be imposed. Acceptable time formats include "minutes",
"minutes:seconds", "hours:minutes:seconds", "days-hours",
"days-hours:minutes" and "days-hours:minutes:seconds".]]></tooltip>
		</attribute>
		<attribute name="time_min" type="string">
			<description>Set a minimum time limit on the job allocation. (--time-min=&lt;time&gt;)</description>
			<tooltip><![CDATA[Set a minimum time limit on the job allocation. If specified, the job may
have it's --time limit lowered to a value no lower than --time-min if
doing so permits the job to begin execution earlier than otherwise possible.
The job's time limit will not be changed after the job is allocated resources.
This is performed by a backfill scheduling algorithm to allocate resources
otherwise reserved for higher priority jobs. Acceptable time formats include
"minutes", "minutes:seconds", "hours:minutes:seconds", "days-hours",
"days-hours:minutes" and "days-hours:minutes:seconds".]]></tooltip>
		</attribute>
		<attribute name="tmp" type="string">
			<description>Specify a minimum amount of temporary disk space. (--tmp=&lt;&gt;)</description>
			<tooltip><![CDATA[Specify a minimum amount of temporary disk space.]]></tooltip>
		</attribute>
		<attribute name="uid" type="string">
			<description>Specify the userid to run the job. (--uid=&lt;user&gt;)</description>
			<tooltip><![CDATA[Attempt to submit and/or run a job as user instead of the invoking user id.
The invoking user's credentials will be used to check access permissions
for the target partition. User root may use this option to run jobs as a
normal user in a RootOnly partition for example. If run as root, sbatch will
drop its permissions to the uid specified after node allocation is successful.
user may be the user name or numerical user ID.]]></tooltip>
		</attribute>
		<attribute name="verbose" type="boolean" translateBooleanAs="--verbose, ">
			<description>Increase the verbosity of sbatch's informational messages. (--verbose)</description>
			<tooltip><![CDATA[Multiple -v's further increase sbatch's verbosity. By default only
errors are displayed.]]></tooltip>
		</attribute>
		<attribute name="wait_all_nodes" type="string">
			<description>Controls when the execution of the command begins. (--wait-all-nodes=&lt;value&gt;)</description>
			<tooltip><![CDATA[Controls when the execution of the command begins.
By default the job will begin execution as soon as the allocation is made.]]></tooltip>
			<choice>,0,1</choice>
			<default></default>
		</attribute>
		<attribute name="wckey" type="string">
			<description>Specify wckey to be used with job. (--wckey=&lt;wckey&gt;)</description>
			<tooltip><![CDATA[Specify wckey to be used with job.
If TrackWCKey=no (default) in the slurm.conf this value is ignored.]]></tooltip>
		</attribute>
		<attribute name="workdir" type="string">
			<description>Set the working directory of the batch script to "directory" before it it executed. (--workdir=&lt;directory&gt;)</description>
			<tooltip><![CDATA[Must use absolute path on scheduled system, or "${ptp_rm:directory#value}".]]></tooltip>
			<default>${ptp_rm:directory#value}</default>
			<link-value-to>directory</link-value-to>
			<validator>
				<regex expression="/.*|\$\{ptp_rm\:directory\#value\}"></regex>
				<error-message>"workdir" field: Must use absolute path on scheduled system, or "${ptp_rm:directory#value}".</error-message>
			</validator>
		</attribute>
		<!-- ========================================================================================== -->
		<!-- SBATCH RUN OPTIONS																			-->
		<!-- ========================================================================================== -->
		<attribute name="run.command" type="choice">
			<description>Which prefix command to use.</description>
			<tooltip><![CDATA[The prefix command to use with this executable. Specify no
prefix command for serial, OpenMP (host only or MIC only), or offload code.]]></tooltip>
			<choice>,ibrun,ibrun tacc_affinity,ibrun.symm</choice>
			<default>ibrun</default>
		</attribute>
		<attribute name="run.label" type="boolean" translateBooleanAs="--label, ">
			<description>Prepend task number to lines of stdout/err. (--label)</description>
			<tooltip><![CDATA[Normally, stdout and stderr from remote tasks is line-buffered directly
to stdout and stderr. The --label option prepends lines of output
with the remote task id.]]></tooltip>
		</attribute>
		<script insertEnvironmentAfter="30" deleteAfterSubmit="true">
			<file-staging-location>${ptp_rm:directory#value}</file-staging-location>
			<line><arg>#!/bin/bash</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --account='>#SBATCH --account=${ptp_rm:account#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --acctg-freq='>#SBATCH --acctg-freq=${ptp_rm:acctg_freq#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --begin='>#SBATCH --begin=${ptp_rm:begin#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --checkpoint='>#SBATCH --checkpoint=${ptp_rm:checkpoint#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --checkpoint-dir='>#SBATCH --checkpoint-dir=${ptp_rm:checkpoint_dir#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --clusters='>#SBATCH --clusters=${ptp_rm:clusters#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --comment=""'>#SBATCH --comment="${ptp_rm:comment#value}"</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --constraint=""'>#SBATCH --constraint="${ptp_rm:constraint#value}"</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH'>#SBATCH ${ptp_rm:contiguous#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --cores-per-socket='>#SBATCH --cores-per-socket=${ptp_rm:cores_per_socket#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --cpu_bind='>#SBATCH --cpu_bind=${ptp_rm:cpu_bind#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --cpus-per-task='>#SBATCH --cpus-per-task=${ptp_rm:cpus_per_task#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --dependency='>#SBATCH --dependency=${ptp_rm:dependency#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --distribution='>#SBATCH --distribution=${ptp_rm:distribution#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --error='>#SBATCH --error=${ptp_rm:error#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --exclude='>#SBATCH --exclude=${ptp_rm:exclude#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH'>#SBATCH ${ptp_rm:exclusive#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --export='>#SBATCH --export=${ptp_rm:export#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --export-file='>#SBATCH --export-file=${ptp_rm:export_file#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --extra-node-info='>#SBATCH --extra-node-info=${ptp_rm:extra_node_info#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --get-user-env='>#SBATCH --get-user-env=${ptp_rm:get_user_env#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --gres='>#SBATCH --gres=${ptp_rm:gres#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --hint='>#SBATCH --hint=${ptp_rm:hint#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH'>#SBATCH ${ptp_rm:hold#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH'>#SBATCH ${ptp_rm:immediate#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --input='>#SBATCH --input=${ptp_rm:input#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --job-name='>#SBATCH --job-name=${ptp_rm:job_name#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --licenses='>#SBATCH --licenses=${ptp_rm:licenses#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --mail-type='>#SBATCH --mail-type=${ptp_rm:mail_type#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --mail-user='>#SBATCH --mail-user=${ptp_rm:mail_user#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --mem='>#SBATCH --mem=${ptp_rm:mem#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --mem-per-cpu='>#SBATCH --mem-per-cpu=${ptp_rm:mem_per_cpu#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --mem_bind='>#SBATCH --mem_bind=${ptp_rm:mem_bind#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --mincpus='>#SBATCH --mincpus=${ptp_rm:mincpus#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --network='>#SBATCH --network=${ptp_rm:network#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --nice='>#SBATCH --nice=${ptp_rm:nice#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --nodefile='>#SBATCH --nodefile=${ptp_rm:nodefile#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --nodelist='>#SBATCH --nodelist=${ptp_rm:nodelist#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --nodes='>#SBATCH --nodes=${ptp_rm:nodes#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH'>#SBATCH ${ptp_rm:no_kill#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH'>#SBATCH ${ptp_rm:no_requeue#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --ntasks='>#SBATCH --ntasks=${ptp_rm:ntasks#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --ntasks-per-node='>#SBATCH --ntasks-per-node=${ptp_rm:ntasks_per_node#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --ntasks-per-core='>#SBATCH --ntasks-per-core=${ptp_rm:ntasks_per_core#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --ntasks-per-socket='>#SBATCH --ntasks-per-socket=${ptp_rm:ntasks_per_socket#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --open-mode='>#SBATCH --open-mode=${ptp_rm:open_mode#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --output='>#SBATCH --output=${ptp_rm:output#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH'>#SBATCH ${ptp_rm:overcommit#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --partition='>#SBATCH --partition=${ptp_rm:partition#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --propagate='>#SBATCH --propagate=${ptp_rm:propagate#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --qos='>#SBATCH --qos=${ptp_rm:qos#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH'>#SBATCH ${ptp_rm:quiet#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH'>#SBATCH ${ptp_rm:requeue#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --reservation='>#SBATCH --reservation=${ptp_rm:reservation#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH'>#SBATCH ${ptp_rm:share#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --signal='>#SBATCH --signal=${ptp_rm:signal#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --sockets-per-node='>#SBATCH --sockets-per-node=${ptp_rm:sockets_per_node#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --switches='>#SBATCH --switches=${ptp_rm:switches#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --threads-per-core='>#SBATCH --threads-per-core=${ptp_rm:threads_per_core#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --time='>#SBATCH --time=${ptp_rm:time#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --time-min='>#SBATCH --time-min=${ptp_rm:time_min#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --tmp='>#SBATCH --tmp=${ptp_rm:tmp#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --uid='>#SBATCH --uid=${ptp_rm:uid#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH'>#SBATCH ${ptp_rm:verbose#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --wait-all-nodes='>#SBATCH --wait-all-nodes=${ptp_rm:wait_all_nodes#value}</arg></line>
			<line><arg isUndefinedIfMatches='#SBATCH --wckey='>#SBATCH --wckey=${ptp_rm:wckey#value}</arg></line>
			<line><arg isUndefinedIfMatches='cd'>cd ${ptp_rm:workdir#value}</arg></line>
			<line><arg>${ptp_rm:run.command#value} ${ptp_rm:executablePath#value} ${ptp_rm:progArgs#value}</arg></line>
		</script>
		<start-up-command name="get-queues">
			<arg>scontrol</arg>
			<arg>show</arg>
			<arg>partition</arg>
			<stdout-parser delim="\n">
				<target ref="queues">
					<match>
						<expression>^PartitionName=([\w\d]+)</expression>
						<add field="value">
							<entry valueGroup="1"/>
						</add>
					</match>
				</target>
			</stdout-parser>
		</start-up-command>
		<submit-batch name="submit-batch" directory="${ptp_rm:directory#value}" waitForId="true">
			<arg>sbatch</arg>
			<arg>${ptp_rm:managed_file_for_script#value}</arg>
			<stdout-parser delim="\n">
				<target ref="@jobId">
					<match>
						<expression>^Submitted batch job ([\d]+)</expression>
						<set field="name">
							<entry valueGroup="1"/></set>
						<set field="default">
							<entry valueGroup="1"/></set>
						<set field="value">
							<entry value="SUBMITTED"/></set>
					</match>
				</target>
				<target ref="@jobId">
					<match>
						<expression flags="DOTALL|UNIX_LINES">.*Submission error: (.*)</expression>
						<set field="value">
							<entry valueGroup="1"/></set>
						<throw message="Job Submit Failed: ${ptp_rm:@jobId#value}"/>
					</match>
				</target>
			</stdout-parser>
			<stderr-parser delim="\n">
				<target ref="@jobId">
					<match>
						<expression>.+</expression>
						<set field="value">
							<entry value="FAILED"/></set>
						<throw message="Job Submit Failed"/>
					</match>
				</target>
			</stderr-parser>
		</submit-batch>
		<get-job-status name="get-job-status" ignoreExitStatus="true">
			<arg>scontrol</arg>
			<arg>show</arg>
			<arg>job</arg><arg>${ptp_rm:@jobId#name}</arg>
			<stdout-parser delim="\n">
				<target ref="@jobId">
					<match>
						<expression>^[\s]*JobState=([\w]+)[\s]+Reason=([\w]+)[\s]+.*</expression>
						<set field="value">
							<entry valueGroup="1"/>
						</set>
						<set field="default">
							<entry valueGroup="2"/></set>
					</match>
					<test op="OR">
						<test op="AND">
						<test op="EQ">
							<value>#value</value>
							<value>PENDING</value>
						</test>
						<test op="EQ">
							<value>#default</value>
							<value>JobHeldUser</value>
						</test>
						<set field="value">
							<entry value="USER_ON_HOLD" />
						</set>
						</test>
						<test op="AND">
						<test op="EQ">
							<value>#value</value>
							<value>PENDING</value>
						</test>
						<test op="EQ">
							<value>#default</value>
							<value>JobHeldAdmin</value>
						</test>
						<set field="value">
							<entry value="SYSTEM_ON_HOLD" />
						</set>
						</test>
						<test op="AND">
						<test op="EQ">
							<value>#value</value>
							<value>PENDING</value>
						</test>
						<test op="EQ">
							<value>#default</value>
							<value>PartitionDown</value>
						</test>
						<set field="value">
							<entry value="SYSTEM_SUSPENDED" />
						</set>
						</test>
						<test op="AND">
						<test op="EQ">
							<value>#value</value>
							<value>PENDING</value>
						</test>
						<test op="EQ">
							<value>#default</value>
							<value>PartitionInactive</value>
						</test>
						<set field="value">
							<entry value="SYSTEM_ON_HOLD" />
						</set>
						</test>
						<test op="AND">
						<test op="EQ">
							<value>#value</value>
							<value>PENDING</value>
						</test>
						<test op="EQ">
							<value>#default</value>
							<value>NodeDown</value>
						</test>
						<set field="value">
							<entry value="SYSTEM_SUSPENDED" />
						</set>
						</test>
						<test op="AND">
						<test op="EQ">
							<value>#value</value>
							<value>PENDING</value>
						</test>
						<test op="EQ">
							<value>#default</value>
							<value>SystemFailure</value>
						</test>
						<set field="value">
							<entry value="SYSTEM_SUSPENDED" />
						</set>
						</test>
					</test>
					<test op="EQ">
						<value>#value</value>
						<value>PENDING</value>
						<set field="value">
							<entry value="QUEUED_ACTIVE"/></set></test>
					<test op="EQ">
						<value>#value</value>
						<value>CONFIGURING</value>
						<set field="value">
							<entry value="SUBMITTED"/></set></test>
					<test op="EQ">
						<value>#value</value>
						<value>RUNNING</value>
						<set field="value">
							<entry value="RUNNING"/>
						</set>
					</test>
					<test op="EQ">
						<value>#value</value>
						<value>SUSPENDED</value>
						<set field="value">
							<entry value="SUSPENDED"/>
						</set>
					</test>
					<test op="EQ">
						<value>#value</value>
						<value>COMPLETED</value>
						<set field="value">
							<entry value="COMPLETED"/>
						</set>
					</test>
					<test op="EQ">
						<value>#value</value>
						<value>COMPLETING</value>
						<set field="value">
							<entry value="COMPLETED"/>
						</set>
					</test>
					<test op="EQ">
						<value>#value</value>
						<value>CANCELLED</value>
						<set field="value">
							<entry value="CANCELED"/>
						</set>
					</test>
					<test op="EQ">
						<value>#value</value>
						<value>FAILED</value>
						<set field="value">
							<entry value="FAILED"/></set></test>
					<test op="EQ">
						<value>#value</value>
						<value>NODE_FAIL</value>
						<set field="value">
							<entry value="FAILED"/></set></test>
					<test op="EQ">
						<value>#value</value>
						<value>TIMEOUT</value>
						<set field="value">
							<entry value="FAILED"/></set></test>
				</target>
			</stdout-parser>
			<stderr-parser delim="\n">
				<target ref="@jobId">
					<match>
						<expression>.+</expression>
						<set field="value">
							<entry value="COMPLETED"/>
						</set>
					</match>
				</target>
			</stderr-parser>
		</get-job-status>
		<terminate-job name="cancel" ignoreExitStatus="true">
			<arg>scancel</arg>
			<arg>${ptp_rm:@jobId#name}</arg>
		</terminate-job>
		<hold-job name="hold" ignoreExitStatus="true">
			<arg>scontrol</arg><arg>hold</arg>
			<arg>${ptp_rm:@jobId#name}</arg>
		</hold-job>
		<release-job name="release" ignoreExitStatus="true">
			<arg>scontrol</arg>
			<arg>release</arg>
			<arg>${ptp_rm:@jobId#name}</arg>
		</release-job>
		<launch-tab>
			<dynamic includeWidgetValuesFrom="Secondary Settings">
				<title>Basic Settings</title>
				<layout>
					<grid-layout/>
				</layout>
				<!-- ATTRIBUTES group -->
				<composite group="true">
					<layout>
						<grid-layout numColumns="4" makeColumnsEqualWidth="false" horizontalSpacing="10" verticalSpacing="15"/>
					</layout>
					<!-- HEADER -->
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_RED">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<fixed-text>Name</fixed-text>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_RED">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" horizontalSpan="2" grabExcessHorizontal="false"/>
						</layout-data>
						<fixed-text>Value</fixed-text>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_RED">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<fixed-text>Description</fixed-text>
					</widget>
					<!-- row 1 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:job_name#tooltip}</tooltip>
						<fixed-text>Job Name: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="job_name">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:job_name#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:job_name#tooltip}</tooltip>
						<fixed-text>${ptp_rm:job_name#description}</fixed-text>
					</widget>
					<!-- row 2 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:partition#tooltip}</tooltip>
						<fixed-text>Queue: </fixed-text>
					</widget>
					<widget type="combo" style="SWT.BORDER" readOnly="true" attribute="partition">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:partition#tooltip}</tooltip>
						<items-from>queues</items-from>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:partition#tooltip}</tooltip>
						<fixed-text>${ptp_rm:partition#description}</fixed-text>
					</widget>
					<!-- row 3 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:workdir#tooltip}</tooltip>
						<fixed-text>Working Directory: </fixed-text>
					</widget>
					<browse title="Browse" textStyle="SWT.BORDER" attribute="workdir" readOnly="true" directory="true">
						<text-layout-data>
							<grid-data horizontalAlign="SWT.FILL"
								horizontalSpan="1" grabExcessHorizontal="true"
								widthHint="150" />
						</text-layout-data>
						<button-layout-data>
							<grid-data horizontalAlign="SWT.FILL"
								horizontalSpan="1" grabExcessHorizontal="false"
								widthHint="50"/>
						</button-layout-data>
						<tooltip>Clear text box if "Browse" button does not work. ${ptp_rm:workdir#tooltip}</tooltip>
					</browse>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:workdir#tooltip}</tooltip>
						<fixed-text>${ptp_rm:workdir#description}</fixed-text>
					</widget>
					<!-- row 4 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:nodes#tooltip}</tooltip>
						<fixed-text>Number of nodes: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="nodes">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:nodes#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:nodes#tooltip}</tooltip>
						<fixed-text>${ptp_rm:nodes#description}</fixed-text>
					</widget>
					<!-- row 5 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:time#tooltip}</tooltip>
						<fixed-text>Wallclock Time: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="time">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:time#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:time#tooltip}</tooltip>
						<fixed-text>${ptp_rm:time#description}</fixed-text>
					</widget>
					<!-- row 6 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:run.command#tooltip}</tooltip>
						<fixed-text>MPI Command: </fixed-text>
					</widget>
					<widget type="combo" style="SWT.BORDER" readOnly="true" attribute="run.command">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:run.command#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:run.command#tooltip}</tooltip>
						<fixed-text>${ptp_rm:run.command#description}</fixed-text>
					</widget>
					<!-- row 7 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:ntasks#tooltip}</tooltip>
						<fixed-text>MPI Number of Tasks:</fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="ntasks">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:ntasks#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:ntasks#tooltip}</tooltip>
						<fixed-text>${ptp_rm:ntasks#description}</fixed-text>
					</widget>
					<!--row 8 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:ntasks_per_node#tooltip}</tooltip>
						<fixed-text>MPI Ranks per Node:</fixed-text>
					</widget>
					<widget type="combo" style="SWT.BORDER" attribute="ntasks_per_node" readOnly="true">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" />
						</layout-data>
						<tooltip>${ptp_rm:ntasks_per_node#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:ntasks_per_node#tooltip}</tooltip>
						<fixed-text>${ptp_rm:ntasks_per_node#description}</fixed-text>
					</widget>
				</composite>
			</dynamic>
			<dynamic includeWidgetValuesFrom="Basic Settings">
				<title>Secondary Settings</title>
				<layout>
					<grid-layout/>
				</layout>
				<!-- ATTRIBUTES group -->
				<composite group="true">
					<layout>
						<grid-layout numColumns="4" makeColumnsEqualWidth="false" horizontalSpacing="10" verticalSpacing="15"/>
					</layout>
					<!-- HEADER -->
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_RED">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<fixed-text>Name</fixed-text>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_RED">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" horizontalSpan="2" grabExcessHorizontal="false"/>
						</layout-data>
						<fixed-text>Value</fixed-text>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_RED">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<fixed-text>Description</fixed-text>
					</widget>
					<!-- row 1 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:acctg_freq#tooltip}</tooltip>
						<fixed-text>Accounting Frequency: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="acctg_freq">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:acctg_freq#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:acctg_freq#tooltip}</tooltip>
						<fixed-text>${ptp_rm:acctg_freq#description}</fixed-text>
					</widget>
					<!-- row 2 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:clusters#tooltip}</tooltip>
						<fixed-text>Clusters: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="clusters">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:clusters#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:clusters#tooltip}</tooltip>
						<fixed-text>${ptp_rm:clusters#description}</fixed-text>
					</widget>
					<!-- row 3 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:comment#tooltip}</tooltip>
						<fixed-text>Comment: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="comment">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:comment#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:comment#tooltip}</tooltip>
						<fixed-text>${ptp_rm:comment#description}</fixed-text>
					</widget>
					<!-- row 4 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:constraint#tooltip}</tooltip>
						<fixed-text>Constraint: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="constraint">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:constraint#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:constraint#tooltip}</tooltip>
						<fixed-text>${ptp_rm:constraint#description}</fixed-text>
					</widget>
					<!-- row 5 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:contiguous#tooltip}</tooltip>
						<fixed-text>Contiguous: </fixed-text>
					</widget>
					<widget type="checkbox" style="SWT.LEFT" attribute="contiguous">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:contiguous#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:contiguous#tooltip}</tooltip>
						<fixed-text>${ptp_rm:contiguous#description}</fixed-text>
					</widget>
					<!-- row 6 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:cores_per_socket#tooltip}</tooltip>
						<fixed-text>Cores Per Socket: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="cores_per_socket">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:cores_per_socket#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:cores_per_socket#tooltip}</tooltip>
						<fixed-text>${ptp_rm:cores_per_socket#description}</fixed-text>
					</widget>
					<!-- row 7 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:cpu_bind#tooltip}</tooltip>
						<fixed-text>CPU Bind: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="cpu_bind">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:cpu_bind#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:cpu_bind#tooltip}</tooltip>
						<fixed-text>${ptp_rm:cpu_bind#description}</fixed-text>
					</widget>
					<!-- row 8 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:cpus_per_task#tooltip}</tooltip>
						<fixed-text>CPUs Per Task: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="cpus_per_task">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:cpus_per_task#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:cpus_per_task#tooltip}</tooltip>
						<fixed-text>${ptp_rm:cpus_per_task#description}</fixed-text>
					</widget>
					<!-- row 9 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:distribution#tooltip}</tooltip>
						<fixed-text>Distribution: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="distribution">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:distribution#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:distribution#tooltip}</tooltip>
						<fixed-text>${ptp_rm:distribution#description}</fixed-text>
					</widget>
					<!-- row 11 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:exclude#tooltip}</tooltip>
						<fixed-text>Exclude Node List: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="exclude">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:exclude#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:exclude#tooltip}</tooltip>
						<fixed-text>${ptp_rm:exclude#description}</fixed-text>
					</widget>
					<!-- row 9 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:exclusive#tooltip}</tooltip>
						<fixed-text>Exclusive: </fixed-text>
					</widget>
					<widget type="checkbox" style="SWT.LEFT" attribute="exclusive">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:exclusive#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:exclusive#tooltip}</tooltip>
						<fixed-text>${ptp_rm:exclusive#description}</fixed-text>
					</widget>
					<!-- row 10 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:export_file#tooltip}</tooltip>
						<fixed-text>Export File: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="export_file">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:export_file#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:export_file#tooltip}</tooltip>
						<fixed-text>${ptp_rm:export_file#description}</fixed-text>
					</widget>
					<!-- row 11 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:extra_node_info#tooltip}</tooltip>
						<fixed-text>Extra Node Info: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="extra_node_info">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:extra_node_info#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:extra_node_info#tooltip}</tooltip>
						<fixed-text>${ptp_rm:extra_node_info#description}</fixed-text>
					</widget>
					<!-- row 12 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:gres#tooltip}</tooltip>
						<fixed-text>Generic Resources: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="gres">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:gres#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:gres#tooltip}</tooltip>
						<fixed-text>${ptp_rm:gres#description}</fixed-text>
					</widget>
					<!-- row 13 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:hint#tooltip}</tooltip>
						<fixed-text>Hint: </fixed-text>
					</widget>
					<widget type="combo" style="SWT.BORDER" readOnly="true" attribute="hint">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:hint#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:hint#tooltip}</tooltip>
						<fixed-text>${ptp_rm:hint#description}</fixed-text>
					</widget>
					<!-- row 14 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:input#tooltip}</tooltip>
						<fixed-text>Input: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="input">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:input#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:input#tooltip}</tooltip>
						<fixed-text>${ptp_rm:input#description}</fixed-text>
					</widget>
					<!-- row 15 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:licenses#tooltip}</tooltip>
						<fixed-text>Licenses: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="licenses">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:licenses#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:licenses#tooltip}</tooltip>
						<fixed-text>${ptp_rm:licenses#description}</fixed-text>
					</widget>
					<!-- row 16 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:mem#tooltip}</tooltip>
						<fixed-text>Memory Per Node: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="mem">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:mem#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:mem#tooltip}</tooltip>
						<fixed-text>${ptp_rm:mem#description}</fixed-text>
					</widget>
					<!-- row 16 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:mem_per_cpu#tooltip}</tooltip>
						<fixed-text>Memory Per CPU: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="mem_per_cpu">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:mem_per_cpu#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:mem_per_cpu#tooltip}</tooltip>
						<fixed-text>${ptp_rm:mem_per_cpu#description}</fixed-text>
					</widget>
					<!-- row 16 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:mem_bind#tooltip}</tooltip>
						<fixed-text>Memory Bind: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="mem_bind">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:mem_bind#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:mem_bind#tooltip}</tooltip>
						<fixed-text>${ptp_rm:mem_bind#description}</fixed-text>
					</widget>
					<!-- row 16 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:mincpus#tooltip}</tooltip>
						<fixed-text>Minimum Number of CPUs Per Node: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="mincpus">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:mincpus#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:mincpus#tooltip}</tooltip>
						<fixed-text>${ptp_rm:mincpus#description}</fixed-text>
					</widget>
					<!-- row 16 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:network#tooltip}</tooltip>
						<fixed-text>Network: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="network">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:network#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:network#tooltip}</tooltip>
						<fixed-text>${ptp_rm:network#description}</fixed-text>
					</widget>
					<!-- row 16 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:nodefile#tooltip}</tooltip>
						<fixed-text>Node File: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="nodefile">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:nodefile#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:nodefile#tooltip}</tooltip>
						<fixed-text>${ptp_rm:nodefile#description}</fixed-text>
					</widget>
					<!-- row 16 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:nodelist#tooltip}</tooltip>
						<fixed-text>Node Name List: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="nodelist">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:nodelist#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:nodelist#tooltip}</tooltip>
						<fixed-text>${ptp_rm:nodelist#description}</fixed-text>
					</widget>
					<!-- row 17 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:no_kill#tooltip}</tooltip>
						<fixed-text>No Kill: </fixed-text>
					</widget>
					<widget type="checkbox" style="SWT.LEFT" attribute="no_kill">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:no_kill#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:no_kill#tooltip}</tooltip>
						<fixed-text>${ptp_rm:no_kill#description}</fixed-text>
					</widget>
					<!-- row 17 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:no_requeue#tooltip}</tooltip>
						<fixed-text>Requeue: </fixed-text>
					</widget>
					<widget type="checkbox" style="SWT.LEFT" attribute="no_requeue">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:no_requeue#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:no_requeue#tooltip}</tooltip>
						<fixed-text>${ptp_rm:no_requeue#description}</fixed-text>
					</widget>
					<!-- row 16 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:ntasks_per_core#tooltip}</tooltip>
						<fixed-text>Number of Tasks Per Core: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="ntasks_per_core">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:ntasks_per_core#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:ntasks_per_core#tooltip}</tooltip>
						<fixed-text>${ptp_rm:ntasks_per_core#description}</fixed-text>
					</widget>
					<!-- row 16 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:ntasks_per_socket#tooltip}</tooltip>
						<fixed-text>Number of Tasks Per Socket: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="ntasks_per_socket">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:ntasks_per_socket#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:ntasks_per_socket#tooltip}</tooltip>
						<fixed-text>${ptp_rm:ntasks_per_socket#description}</fixed-text>
					</widget>
					<!-- row 17 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:overcommit#tooltip}</tooltip>
						<fixed-text>Overcommit: </fixed-text>
					</widget>
					<widget type="checkbox" style="SWT.LEFT" attribute="overcommit">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:overcommit#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:overcommit#tooltip}</tooltip>
						<fixed-text>${ptp_rm:overcommit#description}</fixed-text>
					</widget>
					<!-- row 16 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:propagate#tooltip}</tooltip>
						<fixed-text>Propagate: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="propagate">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:propagate#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:propagate#tooltip}</tooltip>
						<fixed-text>${ptp_rm:propagate#description}</fixed-text>
					</widget>
					<!-- row 16 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:qos#tooltip}</tooltip>
						<fixed-text>QOS: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="qos">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:qos#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:qos#tooltip}</tooltip>
						<fixed-text>${ptp_rm:qos#description}</fixed-text>
					</widget>
					<!-- row 17 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:requeue#tooltip}</tooltip>
						<fixed-text>Requeue: </fixed-text>
					</widget>
					<widget type="checkbox" style="SWT.LEFT" attribute="requeue">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:requeue#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:requeue#tooltip}</tooltip>
						<fixed-text>${ptp_rm:requeue#description}</fixed-text>
					</widget>
					<!-- row 17 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:share#tooltip}</tooltip>
						<fixed-text>Share: </fixed-text>
					</widget>
					<widget type="checkbox" style="SWT.LEFT" attribute="share">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:share#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:share#tooltip}</tooltip>
						<fixed-text>${ptp_rm:share#description}</fixed-text>
					</widget>
					<!-- row 16 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:sockets_per_node#tooltip}</tooltip>
						<fixed-text>Sockets Per Node: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="sockets_per_node">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:sockets_per_node#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:sockets_per_node#tooltip}</tooltip>
						<fixed-text>${ptp_rm:sockets_per_node#description}</fixed-text>
					</widget>
					<!-- row 16 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:switches#tooltip}</tooltip>
						<fixed-text>Switches: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="switches">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:switches#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:switches#tooltip}</tooltip>
						<fixed-text>${ptp_rm:switches#description}</fixed-text>
					</widget>
					<!-- row 16 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:threads_per_core#tooltip}</tooltip>
						<fixed-text>Threads Per Core: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="threads_per_core">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:threads_per_core#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:threads_per_core#tooltip}</tooltip>
						<fixed-text>${ptp_rm:threads_per_core#description}</fixed-text>
					</widget>
					<!-- row 16 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:time_min#tooltip}</tooltip>
						<fixed-text>Time Mininum: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="time_min">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:time_min#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:time_min#tooltip}</tooltip>
						<fixed-text>${ptp_rm:time_min#description}</fixed-text>
					</widget>
					<!-- row 16 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:tmp#tooltip}</tooltip>
						<fixed-text>Temporary Disk Space Minimum: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="tmp">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:tmp#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:tmp#tooltip}</tooltip>
						<fixed-text>${ptp_rm:tmp#description}</fixed-text>
					</widget>
					<!-- row 16 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:uid#tooltip}</tooltip>
						<fixed-text>UID: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="uid">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:uid#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:uid#tooltip}</tooltip>
						<fixed-text>${ptp_rm:uid#description}</fixed-text>
					</widget>
					<!-- row 16 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:wait_all_nodes#tooltip}</tooltip>
						<fixed-text>Wait All Nodes: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="wait_all_nodes">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:wait_all_nodes#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:wait_all_nodes#tooltip}</tooltip>
						<fixed-text>${ptp_rm:wait_all_nodes#description}</fixed-text>
					</widget>
					<!-- row 16 -->
					<widget type="label" style="SWT.LEFT">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:wckey#tooltip}</tooltip>
						<fixed-text>WCKey: </fixed-text>
					</widget>
					<widget type="text" style="SWT.BORDER" attribute="wckey">
						<layout-data>
							<grid-data horizontalAlign="SWT.FILL" horizontalSpan="2" grabExcessHorizontal="false" widthHint="150"/>
						</layout-data>
						<tooltip>${ptp_rm:wckey#tooltip}</tooltip>
					</widget>
					<widget type="label" style="SWT.LEFT" foreground="SWT.COLOR_DARK_BLUE">
						<layout-data>
							<grid-data horizontalAlign="SWT.BEGINNING" grabExcessHorizontal="false"/>
						</layout-data>
						<tooltip>${ptp_rm:wckey#tooltip}</tooltip>
						<fixed-text>${ptp_rm:wckey#description}</fixed-text>
					</widget>
				</composite>
			</dynamic>
			<dynamic>
				<title>Advanced Settings</title>
				<layout>
					<grid-layout />
				</layout>
				<composite group="true">
					<layout>
						<grid-layout numColumns="1" />
					</layout>
					<viewer name="allAttributes" style="SWT.BORDER" sort="true" initialAllChecked="true" type="table">
						<layout-data>
							<grid-data widthHint="600" heightHint="400" horizontalSpan="1" />
						</layout-data>
						<!-- These are the 6 attribute fields mappable to columns. In a "table 
							viewer" the order of the columns is entirely arbitrary -->
						<column-data name="Name" width="300" />
						<column-data name="Value" width="300" />
						<column-data name="Description" width="300" />
						<items>
							<include>account</include>
							<include>acctg_freq</include>
							<include>begin</include>
							<include>checkpoint</include>
							<include>checkpoint_dir</include>
							<include>clusters</include>
							<include>comment</include>
							<include>constraint</include>
							<include>contiguous</include>
							<include>cores_per_socket</include>
							<include>cpu_bind</include>
							<include>cpus_per_task</include>
							<include>dependency</include>
							<include>distribution</include>
							<include>error</include>
							<include>exclude</include>
							<include>exclusive</include>
							<include>export</include>
							<include>export_file</include>
							<include>extra_node_info</include>
							<include>get_user_env</include>
							<include>gres</include>
							<include>hint</include>
							<include>hold</include>
							<include>immediate</include>
							<include>input</include>
							<include>job_name</include>
							<include>licenses</include>
							<include>mail_type</include>
							<include>mail_user</include>
							<include>mem</include>
							<include>mem_per_cpu</include>
							<include>mem_bind</include>
							<include>mincpus</include>
							<include>network</include>
							<include>nice</include>
							<include>nodelist</include>
							<include>nodefile</include>
							<include>nodes</include>
							<include>no_kill</include>
							<include>no_requeue</include>
							<include>ntasks</include>
							<include>ntasks_per_core</include>
							<include>ntasks_per_node</include>
							<include>ntasks_per_socket</include>
							<include>open_mode</include>
							<include>output</include>
							<include>overcommit</include>
							<include>partition</include>
							<include>propagate</include>
							<include>qos</include>
							<include>quiet</include>
							<include>requeue</include>
							<include>reservation</include>
							<include>run.label</include>
							<include>share</include>
							<include>signal</include>
							<include>sockets_per_node</include>
							<include>switches</include>
							<include>threads_per_core</include>
							<include>time</include>
							<include>time_min</include>
							<include>tmp</include>
							<include>uid</include>
							<include>verbose</include>
							<include>wait_all_nodes</include>
							<include>wckey</include>
							<include>workdir</include>
						</items>
					</viewer>
				</composite>
			</dynamic>
			<import title="Import SLURM Script">
				<export-for-override name="exportedEnv" style="SWT.BORDER | SWT.MULTI | SWT.V_SCROLL" sort="true" type="table"
					initialAllChecked="true" tooltipEnabled="true">
					<layout-data>
						<grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" grabExcessHorizontal="true" heightHint="80"/>
					</layout-data>
					<column-data name="Name" width="175" resizable="true">
						<tooltip>Multi-select and click checkbox to apply change to all rows.</tooltip>
					</column-data>
					<column-data name="Value" width="200" resizable="true">
						<tooltip>Click to activate value widget.</tooltip>
					</column-data>
					<items>
						<include>partition</include>
						<include>job_name</include>
						<include>output</include>
						<include>error</include>
						<include>workdir</include>
					</items>
				</export-for-override>
			</import>
		</launch-tab>
	</control-data>
	<monitor-data schedulerType="SLURM">
	</monitor-data>
</resource-manager-builder>
