//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.07.30 at 02:17:45 PM CEST 
//


package org.eclipse.ptp.rm.jaxb.core.data.lml;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.eclipse.ptp.rm.jaxb.core.data.lml package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Layout_QNAME = new QName("http://eclipse.org/ptp/lml", "layout");
    private final static QName _PatternTypeSelect_QNAME = new QName("", "select");
    private final static QName _PatternTypeExclude_QNAME = new QName("", "exclude");
    private final static QName _PatternTypeInclude_QNAME = new QName("", "include");
    private final static QName _LayoutRootAbslayout_QNAME = new QName("", "abslayout");
    private final static QName _LayoutRootUsagebarlayout_QNAME = new QName("", "usagebarlayout");
    private final static QName _LayoutRootChartlayout_QNAME = new QName("", "chartlayout");
    private final static QName _LayoutRootTablelayout_QNAME = new QName("", "tablelayout");
    private final static QName _LayoutRootSplitlayout_QNAME = new QName("", "splitlayout");
    private final static QName _LayoutRootInfoboxlayout_QNAME = new QName("", "infoboxlayout");
    private final static QName _LayoutRootNodedisplaylayout_QNAME = new QName("", "nodedisplaylayout");
    private final static QName _LayoutRootTextlayout_QNAME = new QName("", "textlayout");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.eclipse.ptp.rm.jaxb.core.data.lml
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ElementType }
     * 
     */
    public ElementType createElementType() {
        return new ElementType();
    }

    /**
     * Create an instance of {@link Nodedisplayelement4 }
     * 
     */
    public Nodedisplayelement4 createNodedisplayelement4() {
        return new Nodedisplayelement4();
    }

    /**
     * Create an instance of {@link SchemeElement3 }
     * 
     */
    public SchemeElement3 createSchemeElement3() {
        return new SchemeElement3();
    }

    /**
     * Create an instance of {@link Nodedisplayelement9 }
     * 
     */
    public Nodedisplayelement9 createNodedisplayelement9() {
        return new Nodedisplayelement9();
    }

    /**
     * Create an instance of {@link SelectType }
     * 
     */
    public SelectType createSelectType() {
        return new SelectType();
    }

    /**
     * Create an instance of {@link PatternType }
     * 
     */
    public PatternType createPatternType() {
        return new PatternType();
    }

    /**
     * Create an instance of {@link SchemeElement7 }
     * 
     */
    public SchemeElement7 createSchemeElement7() {
        return new SchemeElement7();
    }

    /**
     * Create an instance of {@link NodedisplaylayoutType }
     * 
     */
    public NodedisplaylayoutType createNodedisplaylayoutType() {
        return new NodedisplaylayoutType();
    }

    /**
     * Create an instance of {@link PictureType }
     * 
     */
    public PictureType createPictureType() {
        return new PictureType();
    }

    /**
     * Create an instance of {@link LayoutType }
     * 
     */
    public LayoutType createLayoutType() {
        return new LayoutType();
    }

    /**
     * Create an instance of {@link SplitlayoutType }
     * 
     */
    public SplitlayoutType createSplitlayoutType() {
        return new SplitlayoutType();
    }

    /**
     * Create an instance of {@link PatternMatchType }
     * 
     */
    public PatternMatchType createPatternMatchType() {
        return new PatternMatchType();
    }

    /**
     * Create an instance of {@link SchemeElement10 }
     * 
     */
    public SchemeElement10 createSchemeElement10() {
        return new SchemeElement10();
    }

    /**
     * Create an instance of {@link Nodedisplayelement8 }
     * 
     */
    public Nodedisplayelement8 createNodedisplayelement8() {
        return new Nodedisplayelement8();
    }

    /**
     * Create an instance of {@link AbslayoutType }
     * 
     */
    public AbslayoutType createAbslayoutType() {
        return new AbslayoutType();
    }

    /**
     * Create an instance of {@link Nodedisplayelement0 }
     * 
     */
    public Nodedisplayelement0 createNodedisplayelement0() {
        return new Nodedisplayelement0();
    }

    /**
     * Create an instance of {@link CommandType }
     * 
     */
    public CommandType createCommandType() {
        return new CommandType();
    }

    /**
     * Create an instance of {@link SchemeElement5 }
     * 
     */
    public SchemeElement5 createSchemeElement5() {
        return new SchemeElement5();
    }

    /**
     * Create an instance of {@link Nodedisplayelement3 }
     * 
     */
    public Nodedisplayelement3 createNodedisplayelement3() {
        return new Nodedisplayelement3();
    }

    /**
     * Create an instance of {@link SchemeElement8 }
     * 
     */
    public SchemeElement8 createSchemeElement8() {
        return new SchemeElement8();
    }

    /**
     * Create an instance of {@link RequestType }
     * 
     */
    public RequestType createRequestType() {
        return new RequestType();
    }

    /**
     * Create an instance of {@link ComponentType }
     * 
     */
    public ComponentType createComponentType() {
        return new ComponentType();
    }

    /**
     * Create an instance of {@link TablelayoutType }
     * 
     */
    public TablelayoutType createTablelayoutType() {
        return new TablelayoutType();
    }

    /**
     * Create an instance of {@link SchemeElement9 }
     * 
     */
    public SchemeElement9 createSchemeElement9() {
        return new SchemeElement9();
    }

    /**
     * Create an instance of {@link Nodedisplayelement7 }
     * 
     */
    public Nodedisplayelement7 createNodedisplayelement7() {
        return new Nodedisplayelement7();
    }

    /**
     * Create an instance of {@link Nodedisplayelement2 }
     * 
     */
    public Nodedisplayelement2 createNodedisplayelement2() {
        return new Nodedisplayelement2();
    }

    /**
     * Create an instance of {@link SchemeElement4 }
     * 
     */
    public SchemeElement4 createSchemeElement4() {
        return new SchemeElement4();
    }

    /**
     * Create an instance of {@link InfoboxlayoutColtype }
     * 
     */
    public InfoboxlayoutColtype createInfoboxlayoutColtype() {
        return new InfoboxlayoutColtype();
    }

    /**
     * Create an instance of {@link ColumnlayoutType }
     * 
     */
    public ColumnlayoutType createColumnlayoutType() {
        return new ColumnlayoutType();
    }

    /**
     * Create an instance of {@link UsagebarlayoutType }
     * 
     */
    public UsagebarlayoutType createUsagebarlayoutType() {
        return new UsagebarlayoutType();
    }

    /**
     * Create an instance of {@link DriverType }
     * 
     */
    public DriverType createDriverType() {
        return new DriverType();
    }

    /**
     * Create an instance of {@link ColordefinitionType }
     * 
     */
    public ColordefinitionType createColordefinitionType() {
        return new ColordefinitionType();
    }

    /**
     * Create an instance of {@link Nodedisplayelement5 }
     * 
     */
    public Nodedisplayelement5 createNodedisplayelement5() {
        return new Nodedisplayelement5();
    }

    /**
     * Create an instance of {@link Nodedisplayelement6 }
     * 
     */
    public Nodedisplayelement6 createNodedisplayelement6() {
        return new Nodedisplayelement6();
    }

    /**
     * Create an instance of {@link LayoutRequestType }
     * 
     */
    public LayoutRequestType createLayoutRequestType() {
        return new LayoutRequestType();
    }

    /**
     * Create an instance of {@link SchemeType }
     * 
     */
    public SchemeType createSchemeType() {
        return new SchemeType();
    }

    /**
     * Create an instance of {@link InfoboxlayoutType }
     * 
     */
    public InfoboxlayoutType createInfoboxlayoutType() {
        return new InfoboxlayoutType();
    }

    /**
     * Create an instance of {@link SchemeElement6 }
     * 
     */
    public SchemeElement6 createSchemeElement6() {
        return new SchemeElement6();
    }

    /**
     * Create an instance of {@link PaneType }
     * 
     */
    public PaneType createPaneType() {
        return new PaneType();
    }

    /**
     * Create an instance of {@link ComponentlayoutType }
     * 
     */
    public ComponentlayoutType createComponentlayoutType() {
        return new ComponentlayoutType();
    }

    /**
     * Create an instance of {@link ChartlayoutType }
     * 
     */
    public ChartlayoutType createChartlayoutType() {
        return new ChartlayoutType();
    }

    /**
     * Create an instance of {@link SchemeElement }
     * 
     */
    public SchemeElement createSchemeElement() {
        return new SchemeElement();
    }

    /**
     * Create an instance of {@link LayoutRoot }
     * 
     */
    public LayoutRoot createLayoutRoot() {
        return new LayoutRoot();
    }

    /**
     * Create an instance of {@link Nodedisplayelement1 }
     * 
     */
    public Nodedisplayelement1 createNodedisplayelement1() {
        return new Nodedisplayelement1();
    }

    /**
     * Create an instance of {@link SchemeElement1 }
     * 
     */
    public SchemeElement1 createSchemeElement1() {
        return new SchemeElement1();
    }

    /**
     * Create an instance of {@link SchemeElement2 }
     * 
     */
    public SchemeElement2 createSchemeElement2() {
        return new SchemeElement2();
    }

    /**
     * Create an instance of {@link ColorconstantType }
     * 
     */
    public ColorconstantType createColorconstantType() {
        return new ColorconstantType();
    }

    /**
     * Create an instance of {@link Nodedisplayelement }
     * 
     */
    public Nodedisplayelement createNodedisplayelement() {
        return new Nodedisplayelement();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LayoutRoot }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://eclipse.org/ptp/lml", name = "layout")
    public JAXBElement<LayoutRoot> createLayout(LayoutRoot value) {
        return new JAXBElement<LayoutRoot>(_Layout_QNAME, LayoutRoot.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SelectType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "select", scope = PatternType.class)
    public JAXBElement<SelectType> createPatternTypeSelect(SelectType value) {
        return new JAXBElement<SelectType>(_PatternTypeSelect_QNAME, SelectType.class, PatternType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PatternMatchType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "exclude", scope = PatternType.class)
    public JAXBElement<PatternMatchType> createPatternTypeExclude(PatternMatchType value) {
        return new JAXBElement<PatternMatchType>(_PatternTypeExclude_QNAME, PatternMatchType.class, PatternType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PatternMatchType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "include", scope = PatternType.class)
    public JAXBElement<PatternMatchType> createPatternTypeInclude(PatternMatchType value) {
        return new JAXBElement<PatternMatchType>(_PatternTypeInclude_QNAME, PatternMatchType.class, PatternType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbslayoutType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "abslayout", scope = LayoutRoot.class)
    public JAXBElement<AbslayoutType> createLayoutRootAbslayout(AbslayoutType value) {
        return new JAXBElement<AbslayoutType>(_LayoutRootAbslayout_QNAME, AbslayoutType.class, LayoutRoot.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UsagebarlayoutType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "usagebarlayout", scope = LayoutRoot.class)
    public JAXBElement<UsagebarlayoutType> createLayoutRootUsagebarlayout(UsagebarlayoutType value) {
        return new JAXBElement<UsagebarlayoutType>(_LayoutRootUsagebarlayout_QNAME, UsagebarlayoutType.class, LayoutRoot.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ChartlayoutType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "chartlayout", scope = LayoutRoot.class)
    public JAXBElement<ChartlayoutType> createLayoutRootChartlayout(ChartlayoutType value) {
        return new JAXBElement<ChartlayoutType>(_LayoutRootChartlayout_QNAME, ChartlayoutType.class, LayoutRoot.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TablelayoutType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "tablelayout", scope = LayoutRoot.class)
    public JAXBElement<TablelayoutType> createLayoutRootTablelayout(TablelayoutType value) {
        return new JAXBElement<TablelayoutType>(_LayoutRootTablelayout_QNAME, TablelayoutType.class, LayoutRoot.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SplitlayoutType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "splitlayout", scope = LayoutRoot.class)
    public JAXBElement<SplitlayoutType> createLayoutRootSplitlayout(SplitlayoutType value) {
        return new JAXBElement<SplitlayoutType>(_LayoutRootSplitlayout_QNAME, SplitlayoutType.class, LayoutRoot.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InfoboxlayoutType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "infoboxlayout", scope = LayoutRoot.class)
    public JAXBElement<InfoboxlayoutType> createLayoutRootInfoboxlayout(InfoboxlayoutType value) {
        return new JAXBElement<InfoboxlayoutType>(_LayoutRootInfoboxlayout_QNAME, InfoboxlayoutType.class, LayoutRoot.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NodedisplaylayoutType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "nodedisplaylayout", scope = LayoutRoot.class)
    public JAXBElement<NodedisplaylayoutType> createLayoutRootNodedisplaylayout(NodedisplaylayoutType value) {
        return new JAXBElement<NodedisplaylayoutType>(_LayoutRootNodedisplaylayout_QNAME, NodedisplaylayoutType.class, LayoutRoot.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InfoboxlayoutType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "textlayout", scope = LayoutRoot.class)
    public JAXBElement<InfoboxlayoutType> createLayoutRootTextlayout(InfoboxlayoutType value) {
        return new JAXBElement<InfoboxlayoutType>(_LayoutRootTextlayout_QNAME, InfoboxlayoutType.class, LayoutRoot.class, value);
    }

}
